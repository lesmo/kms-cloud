@{
    LayoutValues layoutValues = ViewData["LayoutValues"] as LayoutValues;
    RewardsValues rewardsValues = ViewData["RewardsValues"] as RewardsValues;
}
<span class="tituloGrafica">
    <h2>
        <img src="~/Images/Gui/Gui.MiniMedal.jpg">@RewardsStrings.NextReward.ToUpper()
    </h2>
    <hr>
</span>

<div id="prox-recompensa">
    <span class="bandera">
        <img src="~/Images/Gui/Rewards/Gui.BigMedal.jpg" alt="">
    </span>
    <div class="info-recomp">
        <span class="proxRecomp">@RewardsStrings.YouveComeALongWay.ToUpper() :</span>
        <span class="kms">
            @rewardsValues.NextRewards.First().RemainingDistance @(RegionInfo.CurrentRegion.IsMetric ? "kms" : "mi")
        </span>
        <div id="barra">
            <div class="progreso" style="width: @((layoutValues.TotalDistanceCentimeters / rewardsValues.NextRewards.First().TriggerDistanceCentimeters) * 100)%;"></div>
        </div>
        <p>
            @string.Format(
                RewardsStrings.YourRewardWillBeUnlockedAt,
                rewardsValues.NextRewards.First().TriggerDistance,
                RegionInfo.CurrentRegion.IsMetric
                    ? "kms"
                    : "mi"
            )
        </p>
    </div>
</div>

<span class="tituloGrafica">
    <h2>
        <img src="~/Images/Gui/Gui.Trophy.jpg">@RewardsStrings.FutureRewards.ToUpper()
    </h2>
    <hr>
</span>

<div id="recompensasLiberadas">
    @for ( int i = 1; i < rewardsValues.NextRewards.Length; i++ ) {
        <article class="recompensa">
            <img src="~/Images/Gui/Rewards/Gui.GenericBadge.jpg" alt="">
            <p>@RewardsStrings.UnlockedAfter.ToUpper():</p>
            <h3>
                @(rewardsValues.NextRewards[i].RemainingDistance) @(RegionInfo.CurrentRegion.IsMetric ? "KMS" : "MI")
            </h3>
        </article>
    }
</div>

<span class="tituloGrafica">
    <h2>
        <img src="~/Images/Gui/Gui.Trophy.jpg">@RewardsStrings.UnlockedRewards.ToUpper()
    </h2>
    <hr>
</span>

<div id="recompensasLiberadas">
    @foreach ( RewardModel reward in rewardsValues.UnlockedRewards ) {
        <article class="itemLiberada">
            <div class="info">
                <figure><img src="@reward.IconUri.AbsoluteUri" alt="@reward.Title"></figure>
                <h3>@reward.TriggerDistance @(RegionInfo.CurrentRegion.IsMetric ? "KMS" : "MI")</h3>
                <h4>@reward.Title.ToUpper()</h4>
                <p>
                    <small>
                        @string.Format(
                            RewardsStrings.UnlockedOnDate,
                            reward.UnlockDate.ToShortDateString()
                        )
                    </small><br/>
                    @reward.Text
                </p>
            </div>

            @if ( reward.SponsorIcon != null ) {
                <div class="empresa">
                    <figure><img src="@reward.SponsorIcon.AbsoluteUri" alt="@reward.SponsorName"></figure>
                </div>
            }
        </article>
    }
</div>

<div class="paginacion">
    <ul>
        <li>
            <a href="@Url.Action("Index", new { page = 1 })">«</a>
        </li>
        <li>
            <a href="@Url.Action("Index", new { page = 1 })">1</a>
        </li>
        @for ( int i = 2; i <= rewardsValues.TotalPages; i++ ) {
            <li>
                <a href="@Url.Action("Index", new {page = i})">@i</a>
            </li>
        }
        <li><a href="@Url.Action("Index", new {page = rewardsValues.TotalPages})">»</a></li>
    </ul>
</div>